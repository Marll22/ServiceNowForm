<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>true</applies_req_item>
        <applies_sc_task>true</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="ITCM Support">bd0082d41be409d01cf976ae034bcb20</cat_item>
        <cat_variable>IO:12b94a6c1b240dd01cf976ae034bcb47</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>Validate RA</name>
        <order/>
        <script><![CDATA[var userOnRole = '';
var output = '';
var stewards = '';
var responseBody = '';
var authorsUser = '';
var authorsGroup = '';
var recordname = '';
var custodian = '';
var owner = '';
var error = 0;
var progress = 0; // progress of the validation
var total = 0; // total IDs being processed
var current = ""; // current ID being processed
var idqueue = []; // list of IDs being processed
var retriesleft = 3
var finalmessage = ""

function onChange(control, oldValue, newValue, isLoading, isTemplate) {
    error = 0;
    progress = 0;
    total = 0;
    retriesleft = 3;
    finalmessage = "";

    if (isLoading || newValue === '') {
        return;
    }
    if (g_form.getValue('choose_module_mr_rh_gra') == 'risk_assessment' || g_form.getValue('choose_module_ru') == 'risk_assessment') {

        var idinput = g_form.getValue("risk_assessment_id_s");
        var idlist = []

        switch (g_form.getValue('what_is_this_request_for')) {
            case 'record_unlock':
                finalmessage += "Following Risk Assessment(s) records to be unlocked for " + g_user.getFullName() + "(" + g_user.userName + "):<br>";
                break;
            case 'mass_retirement':
                finalmessage += 'Following Risk Assessment(s) records to be retired:<br>';
                break;
            case 'role_handover':
                var gr = new GlideAjax('glideUserID');
                gr.addParam('sysparm_name', 'getUserId');
                gr.addParam('sysparm_sessiontoken', g_form.getValue('sessiontoken'));
                gr.addParam('sysparm_userid', authorsUser);
                gr.getXML(userGetUsersOnRole);
                break;
        }

        if (/(^[\d;]*$)|(^[\d ]*$)/g.test(idinput) == false) {
            toastError("Invalid record ID list. Use only numbers, with either semicolons (;) or spaces as separators.")
            return;
        }

        if (idinput.includes(";")) {
            idlist = idinput.split(";")
        } else {
            idlist = idinput.split(" ")
        }

        idqueue = []
        idlist.forEach(function(id){
            if (/^\d*$/g.test(id)) {
                idqueue.push(id)
            }
        })

        if (idqueue.length <= 0) {
            toastError("Invalid ID list.");
            return;
        }

        console.log(idqueue)

        total = idqueue.length;

        g_form.setValue("validation_progress", "Validating: "+progress+"/"+total);

        toastAlert("Validation started, please wait.");

        processNextID(false);
    }
}

function processNextID(retry) {
    if (idqueue.length > 0 && error == 0) {
        if (retry == false) {
            var id = idqueue.shift()
		    current = id;
        }
        id = current
		console.log(id);
        var ra = new GlideAjax('glideRecordID');
        ra.addParam('sysparm_name', 'checkRiskAssessment');
        ra.addParam('sysparm_recordid', id);
        ra.addParam('sysparm_sessiontoken', g_form.getValue('sessiontoken'));
        ra.getXML(riskAssessmentID);
    }
}

function riskAssessmentID(response) {
    var recordID = response.responseXML.documentElement.getAttribute('answer');
    try {
        console.log(recordID)
        if (recordID.length < 10) {
            throw 'ITCM receive error';
        }
        responseBody = JSON.parse(recordID)["RequestedObject"];
        recordname = responseBody["FieldContents"]["10082"]["Value"];

        if (g_form.getValue('your_role_mr_ra') == 'other' || g_form.getValue('your_role_ru_ra') == 'other') {
            progress += 1;
            g_form.setValue("validation_progress", "Validating: "+progress+"/"+total);
        }

        output = [recordname]
        retriesleft = 3;
        generateMessage();
        processNextID(false);
    } catch (a) {
        if (retriesleft > 0) {
            console.log("Error! Retrying...")
            retriesleft -= 1;
            retryValidation()
        } else {
            toastError("Record " + current + " is not a valid Risk Assessment");
            g_form.clearValue('risk_assessment_id_s');
            error = 1;
            console.error(a, a.stack);
        }
    }
}

function retryValidation() {
    var ga = new GlideAjax('glideSessionToken');
    ga.addParam('sysparm_name', 'getSessionToken');
    var sessionToken = ga.getXML(retryValidationXML);
}

function retryValidationXML(response){
	var sessionToken = response.responseXML.documentElement.getAttribute('answer'); 
	console.log(sessionToken);
	g_form.setValue('sessiontoken', sessionToken);
    processNextID(true);
}

function userIDRA(response) {
    var userID = response.responseXML.documentElement.getAttribute('answer');
    console.log(userID);
    userID = userID.split(',');

    for (var i = 0; i < userID.length; i++) {
        if (g_user.userName == userID[i]) {
            generateMessage()
        }

    }

    var role;
    if (g_form.getValue('your_role_mr_ra') != '') {
        role = g_form.getValue('your_role_mr_ra');
    } else if (g_form.getValue('your_role_ru_ra') != '') {
        role = g_form.getValue('your_role_ru_ra');
    }
    g_form.addErrorMessage(g_user.getFullName() + " is not " + role + " of record(s) " + g_form.getValue('risk_assessment_id_s'));
}

function generateMessage() {
    finalmessage += "<br>"+current+" - "+output[0]
    if (idqueue.length <= 0 && error == 0) {
        g_form.setValue("validation_progress", finalmessage);
        g_form.setValue('validated', 'Yes');
        return 'success';
    }
}

function toastAlert(msg) {
    g_form.addInfoMessage(msg);
    g_form.setValue('validated', 'Yes');
    return 'success';
}

function toastError(msg) {
    g_form.addErrorMessage(msg)
    return 'success';
}

function userGetUsersOnRole(response) {
    var userID = response.responseXML.documentElement.getAttribute('answer');
    userID = userID.split(',');
    g_form.setValue('select_replacement_user_choice', userID);
    console.log(userID)
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>SA\JVBFONS</sys_created_by>
        <sys_created_on>2022-03-16 17:31:55</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4e6ab4551b1a85144a61ebd22a4bcb88</sys_id>
        <sys_mod_count>40</sys_mod_count>
        <sys_name>Validate RA</sys_name>
        <sys_overrides/>
        <sys_package display_value="ITCM Support" source="x_iem_itcm_support">f01ed1941b6cc5d01cf976ae034bcb86</sys_package>
        <sys_policy/>
        <sys_scope display_value="ITCM Support">f01ed1941b6cc5d01cf976ae034bcb86</sys_scope>
        <sys_update_name>catalog_script_client_4e6ab4551b1a85144a61ebd22a4bcb88</sys_update_name>
        <sys_updated_by>SA\JVBFONS</sys_updated_by>
        <sys_updated_on>2022-03-17 20:18:29</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
